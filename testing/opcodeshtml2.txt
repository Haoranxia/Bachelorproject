<table style="text-align: left; width: 100%; font-family: Arial;" cellspacing="2" cellpadding="2" border="1">
      <tbody>
        <tr>
          <td style="vertical-align: top; text-align: center;
            font-weight: bold;">Opcode
            (hex)<br>
          </td>
          <td style="vertical-align: top; text-align: center;"><span style="font-weight: bold;">Opcode name</span><br>
          </td>
          <td style="vertical-align: top; text-align: center;"><span style="font-weight: bold;">Explanation</span><br>
          </td>
          <td style="vertical-align: top; text-align: center;"><span style="font-weight: bold;">Example</span><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">00<br>
          </td>
          <td style="vertical-align: top;">nop<br>
          </td>
          <td style="vertical-align: top;">No operation<br>
          </td>
          <td style="vertical-align: top;">0000 - nop <br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">01<br>
          </td>
          <td style="vertical-align: top;">move vx,vy<br>
          </td>
          <td style="vertical-align: top;">Moves the content of vy into
            vx.
            Both registers must be in the first 256 register range.<br>
          </td>
          <td style="vertical-align: top;">0110 - move v0, v1<br>
            Moves v1 into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">02<br>
          </td>
          <td style="vertical-align: top;">move/from16 vx,vy<br>
          </td>
          <td style="vertical-align: top;">Moves the content of vy into
            vx.
            vy may be in the 64k register range while vx is one of the
            first 256
            registers.<br>
          </td>
          <td style="vertical-align: top;">0200 1900 - move/from16 v0,
            v25<br>
            Moves v25 into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">03<br>
          </td>
          <td style="vertical-align: top;">move/16<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">04<br>
          </td>
          <td style="vertical-align: top;">move-wide <br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">05<br>
          </td>
          <td style="vertical-align: top;">move-wide/from16 vx,vy<br>
          </td>
          <td style="vertical-align: top;">Moves a long/double value
            from
            vy to vx. vy may be in the 64k register range while wx is
            one of the
            first 256 registers.<br>
          </td>
          <td style="vertical-align: top;">0516 0000 - move-wide/from16
            v22, v0<br>
            Moves v0 into v22.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">06<br>
          </td>
          <td style="vertical-align: top;">move-wide/16<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">07<br>
          </td>
          <td style="vertical-align: top;">move-object vx,vy<br>
          </td>
          <td style="vertical-align: top;">Moves the object reference
            from
            vy to vx.<br>
          </td>
          <td style="vertical-align: top;">0781 - move-object v1, v8<br>
            Moves the object reference in v8 to v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">08<br>
          </td>
          <td style="vertical-align: top;">move-object/from16 vx,vy<br>
          </td>
          <td style="vertical-align: top;">Moves the object reference
            from
            vy to vx, vy can address 64k registers and vx can address
            256 registers.<br>
          </td>
          <td style="vertical-align: top;">0801 1500 -
            move-object/from16
            v1, v21<br>
            Move the object reference in v21 to v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">09<br>
          </td>
          <td style="vertical-align: top;">move-object/16<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">0A<br>
          </td>
          <td style="vertical-align: top;">move-result vx<br>
          </td>
          <td style="vertical-align: top;">Move the result value of the
            previous method invocation into vx.<br>
          </td>
          <td style="vertical-align: top;">0A00 - move-result v0<br>
            Move the return value of a previous method invocation into
            v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">0B<br>
          </td>
          <td style="vertical-align: top;">move-result-wide vx<br>
          </td>
          <td style="vertical-align: top;">Move the long/double result
            value of the previous method invocation into vx,vx+1.<br>
          </td>
          <td style="vertical-align: top;">0B02 - move-result-wide v2<br>
            Move the long/double result value of the previous method
            invocation
            into v2,v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">0C<br>
          </td>
          <td style="vertical-align: top;">move-result-object vx<br>
          </td>
          <td style="vertical-align: top;">Move the result object
            reference
            of the previous method invocation into vx.<br>
          </td>
          <td style="vertical-align: top;">0C00 - move-result-object v0<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">0D<br>
          </td>
          <td style="vertical-align: top;">move-exception vx<br>
          </td>
          <td style="vertical-align: top;">Move the exception object
            reference thrown during a method invocation into vx. <br>
          </td>
          <td style="vertical-align: top;">0D19 - move-exception v25<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">0E<br>
          </td>
          <td style="vertical-align: top;">return-void<br>
          </td>
          <td style="vertical-align: top;">Return without a return value<br>
          </td>
          <td style="vertical-align: top;">0E00 - return-void<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">0F<br>
          </td>
          <td style="vertical-align: top;">return vx<br>
          </td>
          <td style="vertical-align: top;">Return with vx return value<br>
          </td>
          <td style="vertical-align: top;">0F00 - return v0<br>
            Returns with return value in v0.<br>
            <br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">10<br>
          </td>
          <td style="vertical-align: top;">return-wide vx<br>
          </td>
          <td style="vertical-align: top;">Return with double/long
            result
            in vx,vx+1.<br>
          </td>
          <td style="vertical-align: top;">1000 - return-wide v0<br>
            Returns with a double/long value in v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">11<br>
          </td>
          <td style="vertical-align: top;">return-object vx<br>
          </td>
          <td style="vertical-align: top;">Return with vx object
            reference
            value.<br>
          </td>
          <td style="vertical-align: top;">1100 - return-object v0<br>
            Returns with object reference value in v0<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">12<br>
          </td>
          <td style="vertical-align: top;">const/4 vx,lit4<br>
          </td>
          <td style="vertical-align: top;">Puts the 4 bit constant into
            vx<br>
          </td>
          <td style="vertical-align: top;">1221 - const/4 v1, #int2<br>
            Moves literal 2 into v1. The destination register is in the
            lower 4 bit
            in the second byte, the literal 2 is in the higher 4 bit.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">13<br>
          </td>
          <td style="vertical-align: top;">const/16 vx,lit16<br>
          </td>
          <td style="vertical-align: top;">Puts the 16 bit constant into
            vx<br>
          </td>
          <td style="vertical-align: top;">1300 0A00 - const/16 v0, #int
            10<br>
            Puts the literal constant of 10 into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">14<br>
          </td>
          <td style="vertical-align: top;">const vx, lit32<br>
          </td>
          <td style="vertical-align: top;">Puts the integer constant
            into vx<br>
          </td>
          <td style="vertical-align: top;">1400 4E61 BC00 - const v0,
            #12345678 // #00BC614E<br>
            Moves literal 12345678 into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">15<br>
          </td>
          <td style="vertical-align: top;">const/high16 v0, lit16<br>
          </td>
          <td style="vertical-align: top;">Puts the 16 bit constant into
            the topmost bits of the register. Used to initialize float
            values.<br>
          </td>
          <td style="vertical-align: top;">1500 2041 - const/high16 v0,
            #float 10.0 // #41200000<br>
            Moves the floating literal of 10.0 into v0. The 16 bit
            literal in the
            instruction carries the top 16 bits of the floating point
            number.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">16<br>
          </td>
          <td style="vertical-align: top;">const-wide/16 vx, lit16<br>
          </td>
          <td style="vertical-align: top;">Puts the integer constant
            into
            vx and vx+1 registers, expanding the integer constant into a
            long
            constant..<br>
          </td>
          <td style="vertical-align: top;">1600 0A00 - const-wide/16 v0,
            #long 10<br>
            Moves literal 10 into v0 and v1 registers.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">17<br>
          </td>
          <td style="vertical-align: top;">const-wide/32 vx, lit32<br>
          </td>
          <td style="vertical-align: top;">Puts the 32 bit constant into
            vx
            and vx+1 registers, expanding the integer constant into a
            long constant.<br>
          </td>
          <td style="vertical-align: top;">1702 4e61 bc00 -
            const-wide/32
            v2, #long 12345678 // #00bc614e<br>
            Puts #12345678 into v2 and v3 registers.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">18<br>
          </td>
          <td style="vertical-align: top;">const-wide vx, lit64<br>
          </td>
          <td style="vertical-align: top;">Puts the 64 bit constant into
            vx
            and vx+1 registers.<br>
          </td>
          <td style="vertical-align: top;">1802 874b 6b5d 54dc 2b00-
            const-wide v2, #long 12345678901234567 // #002bdc545d6b4b87<br>
            Puts #12345678901234567 into v2 and v3 registers.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">19<br>
          </td>
          <td style="vertical-align: top;">const-wide/high16 vx,lit16<br>
          </td>
          <td style="vertical-align: top;">Puts the 16 bit constant into
            the highest 16 bit of vx and vx+1 registers. Used to
            initialize double
            values.<br>
          </td>
          <td style="vertical-align: top;">1900 2440 - const-wide/high16
            v0, #double 10.0 // #402400000<br>
            Puts the double constant of 10.0 into v0 register.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">1A<br>
          </td>
          <td style="vertical-align: top;">const-string vx,string_id<br>
          </td>
          <td style="vertical-align: top;">Puts reference to a string
            constant identified by string_id into vx.<br>
          </td>
          <td style="vertical-align: top;">1A08 0000 - const-string v8,
            ""
            // string@0000<br>
            Puts reference to string@0000 (entry #0 in the string table)
            into v8.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">1B<br>
          </td>
          <td style="vertical-align: top;">const-string-jumbo<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">1C<br>
          </td>
          <td style="vertical-align: top;">const-class vx,type_id<br>
          </td>
          <td style="vertical-align: top;">Moves the class object of a
            class identified by type_id (e.g. Object.class) into vx.<br>
          </td>
          <td style="vertical-align: top;">1C00 0100 - const-class v0,
            Test3 // type@0001<br>
            Moves reference to Test3.class (entry#1 in the type id
            table) into <br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">1D<br>
          </td>
          <td style="vertical-align: top;">monitor-enter vx<br>
          </td>
          <td style="vertical-align: top;">Obtains the monitor of the
            object referenced by vx.<br>
          </td>
          <td style="vertical-align: top;">1D03 - monitor-enter v3<br>
            Obtains the monitor of the object referenced by v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">1E<br>
          </td>
          <td style="vertical-align: top;">monitor-exit<br>
          </td>
          <td style="vertical-align: top;">Releases the monitor of the
            object referenced by vx.<br>
          </td>
          <td style="vertical-align: top;">1E03 - monitor-exit v3<br>
            Releases the monitor of the object referenced by v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">1F<br>
          </td>
          <td style="vertical-align: top;">check-cast vx, type_id<br>
          </td>
          <td style="vertical-align: top;">Checks whether the object
            reference in vx can be cast to an instance of a class
            referenced by
            type_id. Throws ClassCastException if the cast is not
            possible,
            continues execution otherwise.<br>
          </td>
          <td style="vertical-align: top;">1F04 0100 - check-cast v4,
            Test3
            // type@0001<br>
            Checks whether the object reference in v4 can be cast to
            type@0001
            (entry #1 in the type id table)<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">20<br>
          </td>
          <td style="vertical-align: top;">instance-of vx,vy,type_id<br>
          </td>
          <td style="vertical-align: top;">Checks whether vy is instance
            of
            a class identified by type_id. Sets vx non-zero if it is, 0
            otherwise.<br>
          </td>
          <td style="vertical-align: top;">2040 0100 - instance-of v0,
            v4,
            Test3 // type@0001<br>
            Checks whether the object reference in v4 is an instance of
            type@0001
            (entry #1 in the type id table). Sets v0 to non-zero if v4
            is instance
            of Test3, 0 otherwise.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">21<br>
          </td>
          <td style="vertical-align: top;">array-length vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates the number of
            elements of the array referenced by vy and puts the length
            value into
            vx.<br>
          </td>
          <td style="vertical-align: top;">2111 - array-length v1, v1<br>
            Calculates the number of elements of the array referenced by
            v1 and
            puts the result into v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">22<br>
          </td>
          <td style="vertical-align: top;">new-instance vx,type<br>
          </td>
          <td style="vertical-align: top;">Instantiates an object type
            and
            puts the reference of the newly created instance into vx.<br>
          </td>
          <td style="vertical-align: top;">2200 1500 - new-instance v0,
            java.io.FileInputStream // type@0015<br>
            Instantiates type@0015 (entry #15H in the type table) and
            puts its
            reference into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">23<br>
          </td>
          <td style="vertical-align: top;">new-array vx,vy,type_id<br>
          </td>
          <td style="vertical-align: top;">Generates a new array of
            type_id
            type and vy element size and puts the reference to the array
            into vx.<br>
          </td>
          <td style="vertical-align: top;">2312 2500 - new-array v2, v1,
            char[] // type@0025<br>
            Generates a new array of type@0025 type and v1 size and puts
            the
            reference to the new array into v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">24<br>
          </td>
          <td style="vertical-align: top;">filled-new-array
            {parameters},type_id<br>
          </td>
          <td style="vertical-align: top;">Generates a new array of
            type_id
            and fills it with the parameters<sup>5</sup>. Reference to
            the newly
            generated array can be obtained by a move-result-object
            instruction,
            immediately following the filled-new-array instruction.<br>
          </td>
          <td style="vertical-align: top;"> 2420 530D 0000 -
            filled-new-array {v0,v0},[I // type@0D53<br>
            Generates a new array of type@0D53. The array's size will be
            2 and both
            elements will be filled with the contents of v0 register.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">25<br>
          </td>
          <td style="vertical-align: top;">filled-new-array-range
            {vx..vy},type_id<br>
          </td>
          <td style="vertical-align: top;">Generates a new array of
            type_id
            and fills it with a range of parameters. Reference to the
            newly
            generated array can be obtained by a
            move-result-object instruction, immediately following the
            filled-new-array instruction. </td>
          <td style="vertical-align: top;">2503 0600 1300 -
            filled-new-array/range
            {v19..v21}, [B // type@0006<br>
            Generates a new array of type@0D53. The array's size will be
            3 and the
            elements will be filled using the v19,v20 and v21 registers<sup>4</sup>.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">26<br>
          </td>
          <td style="vertical-align: top;">fill-array-data
            vx,array_data_offset<br>
          </td>
          <td style="vertical-align: top;">Fills the array referenced by
            vx
            with the static data. The location of the static data is the
            sum
            of&nbsp; the position of the current instruction and the
            offset<br>
          </td>
          <td style="vertical-align: top;">2606 2500 0000 -
            fill-array-data
            v6, 00e6 // +0025<br>
            Fills the array referenced by v0 with the static data at
            current
            instruction+25H words location. The offset is expressed as a
            32-bit
            number. The static data is stored in the following format:<br>
            0003 // Table type: static array data<br>
            0400 // Byte per array element (in this case, 4 byte
            integers)<br>
            0300 0000 // Number of elements in the table<br>
            0100 0000&nbsp; // Element #0: integer 1<br>
            0200 0000 // Element #1: integer 2<br>
            0300 0000 // Element #2: integer3<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">27<br>
          </td>
          <td style="vertical-align: top;">throw vx<br>
          </td>
          <td style="vertical-align: top;">Throws an exception object.
            The
            reference of the exception object is in vx.<br>
          </td>
          <td style="vertical-align: top;">2700 - throw v0<br>
            Throws an exception. The exception object reference is in
            v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">28<br>
          </td>
          <td style="vertical-align: top;">goto target<br>
          </td>
          <td style="vertical-align: top;">Unconditional jump by short
            offset<sup>2</sup>. <br>
          </td>
          <td style="vertical-align: top;">28F0 - goto 0005 // -0010<br>
            Jumps to current position-16 words (hex 10). 0005 is the
            label of the
            target instruction.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">29<br>
          </td>
          <td style="vertical-align: top;">goto/16 target<br>
          </td>
          <td style="vertical-align: top;">Unconditional jump by 16 bit
            offset<sup>2</sup>.<br>
          </td>
          <td style="vertical-align: top;">2900 0FFE - goto/16 002f //
            -01f1<br>
            Jumps to the current position-1F1H words. 002F is the label
            of the
            target instruction.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">2A<br>
          </td>
          <td style="vertical-align: top;">goto/32 target<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">2B<br>
          </td>
          <td style="vertical-align: top;">packed-switch vx,table<br>
          </td>
          <td style="vertical-align: top;">Implements a switch statement
            where the case constants are close to each other. The
            instruction uses
            an index table. vx indexes into this table to find the
            offset of the
            instruction for a particular case. If vx falls out of the
            index table,
            the execution continues on the next instruction (default
            case).<br>
          </td>
          <td style="vertical-align: top;">2B02 0C00 0000 -
            packed-switch
            v2, 000c // +000c<br>
            Execute a packed switch according to the switch argument in
            v2. The
            position of the index table is at current instruction+0CH
            words. The
            table looks like the following:<br>
            0001 // Table type: packed switch table<br>
            0300 // number of elements<br>
            0000 0000 // element base<br>
            0500 0000&nbsp; 0: 00000005 // case 0: +00000005<br>
            0700 0000&nbsp; 1: 00000007 // case 1: +00000007<br>
            0900 0000&nbsp; 2: 00000009 // case 2: +00000009<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">2C<br>
          </td>
          <td style="vertical-align: top;">sparse-switch vx,table<br>
          </td>
          <td style="vertical-align: top;">Implements a switch statement
            with sparse case table. The instruction uses a lookup table
            with case
            constants and offsets for each case constant. If there is no
            match in
            the table, execution continues on the next instruction
            (default case).<br>
          </td>
          <td style="vertical-align: top;">2C02 0c00 0000 -
            sparse-switch
            v2, 000c // +000c<br>
            Execute a sparse switch according to the switch argument in
            v2. The
            position of the lookup table is at current instruction+0CH
            words. The
            table looks like the following.<br>
            0002 // Table type: sparse switch table<br>
            0300 // number of elements<br>
            9cff ffff // first case: -100<br>
            fa00 0000 // second case constant: 250<br>
            e803 0000 // third case constant: 1000<br>
            0500 0000 // offset for the first case constant: +5<br>
            0700 0000 // offset for the second case constant: +7<br>
            0900 0000 // offset for the third case constant: +9<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">2D<br>
          </td>
          <td style="vertical-align: top;">cmpl-float<br>
          </td>
          <td style="vertical-align: top;">Compares the float values in
            vy
            and vz and sets the integer value in vx accordingly<sup>3</sup>
          </td>
          <td style="vertical-align: top;">2D00 0607 - cmpl-float v0,
            v6, v7<br>
            Compares the float values in v6 and v7 then sets v0
            accordingly. NaN
            bias is less-than, the instruction will return -1 if any of
            the
            parameters is NaN. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">2E<br>
          </td>
          <td style="vertical-align: top;">cmpg-float vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Compares the float values in
            vy
            and vz and sets the integer value in vx accordingly<sup>3</sup>.</td>
          <td style="vertical-align: top;">2E00 0607 - cmpg-float v0,
            v6, v7<br>
            Compares the float values in v6 and v7 then sets v0
            accordingly. NaN
            bias is greater-than, the instruction will return 1 if any
            of the
            parameters is NaN. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">2F<br>
          </td>
          <td style="vertical-align: top;">cmpl-double vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Compares the double values in
            vy
            and vz<sup>2</sup> and sets the integer value in vx
            accordingly<sup>3</sup>. </td>
          <td style="vertical-align: top;">2F19 0608 - cmpl-double v25,
            v6,
            v8<br>
            Compares the double values in v6,v7 and v8,v9 and sets v25
            accordingly.
            NaN bias is less-than, the instruction will return -1 if any
            of the
            parameters is NaN. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">30<br>
          </td>
          <td style="vertical-align: top;">cmpg-double vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Compares the double values in
            vy
            and vz<sup>2</sup> and sets the integer value in vx
            accordingly<sup>3</sup>.</td>
          <td style="vertical-align: top;">3000 080A - cmpg-double v0,
            v8,
            v10<br>
            Compares the double values in v8,v9 and v10,v11 then sets v0
            accordingly. NaN bias is greater-than, the instruction will
            return 1 if
            any of the parameters is NaN. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">31<br>
          </td>
          <td style="vertical-align: top;">cmp-long vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Compares the long values in
            vy
            and vz and sets the integer value in vx accordingly<sup>3</sup>.<br>
          </td>
          <td style="vertical-align: top;">3100 0204 - cmp-long v0, v2,
            v4<br>
            Compares the long values in v2 and v4 then sets v0
            accordingly.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">32<br>
          </td>
          <td style="vertical-align: top;">if-eq vx,vy,target<br>
          </td>
          <td style="vertical-align: top;">Jumps to target if vx==vy<sup>2</sup>.
            vx
            and vy are integer values.<br>
          </td>
          <td style="vertical-align: top;">32b3 6600 - if-eq v3, v11,
            0080
            // +0066<br>
            Jumps to the current position+66H words if v3==v11. 0080 is
            the label
            of the target instruction.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">33<br>
          </td>
          <td style="vertical-align: top;">if-ne vx,vy,target<br>
          </td>
          <td style="vertical-align: top;">Jumps to target if vx!=vy<sup>2</sup>.
            vx
            and vy are integer values. </td>
          <td style="vertical-align: top;">33A3 1000 - if-ne v3, v10,
            002c
            // +0010<br>
            Jumps to the current position+10H words if v3!=v10. 002c is
            the label
            of the target instruction.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">34<br>
          </td>
          <td style="vertical-align: top;">if-lt vx,vy,target<br>
          </td>
          <td style="vertical-align: top;">Jumps to target is vx&lt;vy<sup>2</sup>.
            vx
            and vy are integer values.<br>
          </td>
          <td style="vertical-align: top;">3432 CBFF - if-lt v2, v3,
            0023
            // -0035<br>
            Jumps to the current position-35H words if v2&lt;v3. 0023 is
            the label
            of the target instruction.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">35<br>
          </td>
          <td style="vertical-align: top;">if-ge vx, vy,target<br>
          </td>
          <td style="vertical-align: top;">Jumps to target if vx&gt;=vy<sup>2</sup>.
            vx
            and vy are integer values.<br>
          </td>
          <td style="vertical-align: top;">3510 1B00 - if-ge v0, v1,
            002b
            //
            +001b<br>
            Jumps to the current position+1BH words if v0&gt;=v1. 002b
            is the label
            of the target instruction.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">36<br>
          </td>
          <td style="vertical-align: top;">if-gt vx,vy,target<br>
          </td>
          <td style="vertical-align: top;">Jumps to target if vx&gt;vy<sup>2</sup>.
            vx
            and vy are integer values.</td>
          <td style="vertical-align: top;">3610 1B00 - if-ge v0, v1,
            002b
            //
            +001b<br>
            Jumps to the current position+1BH words if v0&gt;v1. 002b is
            the label
            of the target instruction.</td>
        </tr>
        <tr>
          <td style="vertical-align: top;">37<br>
          </td>
          <td style="vertical-align: top;">if-le vx,vy,target<br>
          </td>
          <td style="vertical-align: top;">Jumps to target if vx&lt;=vy<sup>2</sup>.
            vx
            and vy are integer values. </td>
          <td style="vertical-align: top;">3756 0B00 - if-le v6, v5,
            0144
            // +000b<br>
            Jumps to the current position+0BH words if v6&lt;=v5. 0144
            is the label
            of the target instruction.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">38<br>
          </td>
          <td style="vertical-align: top;">if-eqz vx,target<br>
          </td>
          <td style="vertical-align: top;">Jumps to target if vx==0<sup>2</sup>.
            vx
            is an integer value.<br>
          </td>
          <td style="vertical-align: top;">3802 1900 - if-eqz v2, 0038
            //
            +0019<br>
            Jumps to the current position+19H words if v2==0. 0038 is
            the label
            of the target instruction.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">39<br>
          </td>
          <td style="vertical-align: top;">if-nez vx,target<br>
          </td>
          <td style="vertical-align: top;">Checks vx and jumps if vx is
            nonzero<sup>2</sup>. <br>
          </td>
          <td style="vertical-align: top;">3902 1200 - if-nez v2, 0014
            //
            +0012<br>
            Jumps to current position+18 words (hex 12) if v2 is
            nonzero. 0014 is
            the label of the target instruction.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">3A<br>
          </td>
          <td style="vertical-align: top;">if-ltz vx,target<br>
          </td>
          <td style="vertical-align: top;">Checks vx and jumps if
            vx&lt;0<sup>2</sup>. </td>
          <td style="vertical-align: top;">3A00 1600 - if-ltz v0, 002d
            //
            +0016<br>
            Jumps to the current position+16H words if v0&lt;0. 002d is
            the label
            of the target instruction. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">3B<br>
          </td>
          <td style="vertical-align: top;">if-gez vx,target<br>
          </td>
          <td style="vertical-align: top;">Checks vx and jumps if
            vx&gt;=0<sup>2</sup>.<br>
          </td>
          <td style="vertical-align: top;">3B00 1600 - if-gez v0, 002d
            //
            +0016<br>
            Jumps to the current position+16H words if v0 &gt;=0. 002d
            is the label
            of the target instruction.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">3C<br>
          </td>
          <td style="vertical-align: top;">if-gtz vx,target<br>
          </td>
          <td style="vertical-align: top;">Checks vx and jumps if
            vx&gt;0<sup>2</sup>. </td>
          <td style="vertical-align: top;">3C00 1D00 - if-gtz v0, 004a
            //
            +001d<br>
            Jumps to the current position+1DH words if v0&gt;0. 004A is
            the label
            of the target instruction. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">3D<br>
          </td>
          <td style="vertical-align: top;">if-lez vx,target<br>
          </td>
          <td style="vertical-align: top;">Checks vx and jumps if
            vx&lt;=0<sup>2</sup>. </td>
          <td style="vertical-align: top;">3D00 1D00 - if-lez v0, 004a
            //
            +001d<br>
            Jumps to the current position+1DH words if v0&lt;=0. 004A is
            the label
            of the target instruction.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">3E<br>
          </td>
          <td style="vertical-align: top;">unused_3E<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">3F<br>
          </td>
          <td style="vertical-align: top;">unused_3F<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">40<br>
          </td>
          <td style="vertical-align: top;">unused_40<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">41<br>
          </td>
          <td style="vertical-align: top;">unused_41<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">42<br>
          </td>
          <td style="vertical-align: top;">unused_42<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">43<br>
          </td>
          <td style="vertical-align: top;">unused_43<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">44<br>
          </td>
          <td style="vertical-align: top;">aget vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Gets an integer value of an
            object reference array into vx. The array is referenced by
            vy and is
            indexed by vz. </td>
          <td style="vertical-align: top;">4407 0306 - aget v7, v3, v6<br>
            Gets an integer array element. The array is referenced by v3
            and the element is indexed by v6. The element will be put
            into v7.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">45<br>
          </td>
          <td style="vertical-align: top;">aget-wide vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Gets a long/double value of
            long/double array into vx,vx+1. The array is referenced by
            vy and is
            indexed by vz. </td>
          <td style="vertical-align: top;">4505 0104 - aget-wide v5, v1,
            v4<br>
            Gets a long/double array element. The array is referenced by
            v1
            and the element is indexed by v4. The element will be put
            into v5,v6.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">46<br>
          </td>
          <td style="vertical-align: top;">aget-object vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Gets an object reference
            value
            of an object reference array into vx. The array is
            referenced by vy
            and is indexed by vz.<br>
          </td>
          <td style="vertical-align: top;">4602 0200 - aget-object v2,
            v2,
            v0<br>
            Gets an object reference array element. The array is
            referenced by v2
            and the element is indexed by v0. The element will be put
            into v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">47<br>
          </td>
          <td style="vertical-align: top;">aget-boolean vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Gets a boolean value
            of a boolean array into vx. The array is referenced by vy
            and is indexed by vz. </td>
          <td style="vertical-align: top;">4700 0001 - aget-boolean v0,
            v0,
            v1 <br>
            Gets a boolean array element. The array is referenced by v0
            and the element is indexed by v1. The element will be put
            into v0. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">48<br>
          </td>
          <td style="vertical-align: top;">aget-byte vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Gets a byte value
            of a byte array into vx. The array is referenced by vy
            and is indexed by vz. </td>
          <td style="vertical-align: top;">4800 0001 - aget-byte v0, v0,
            v1<br>
            Gets a byte array element. The array is referenced by v0
            and the element is indexed by v1. The element will be put
            into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">49<br>
          </td>
          <td style="vertical-align: top;">aget-char vx, vy,vz<br>
          </td>
          <td style="vertical-align: top;">Gets a char value&nbsp; of a
            character array into vx. The
            element is indexed by vz, the array object is referenced by
            vy </td>
          <td style="vertical-align: top;">4905 0003 - aget-char v5, v0,
            v3<br>
            Gets a character array element. The array is referenced by
            v0 and the
            element is indexed by v3. The element will be put into v5.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">4A<br>
          </td>
          <td style="vertical-align: top;">aget-short vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Gets a short value&nbsp; of a
            short array into vx. The
            element is indexed by vz, the array object is referenced by
            vy. </td>
          <td style="vertical-align: top;">4A00 0001 - aget-short v0,
            v0, v1<br>
            Gets a short array element. The array is referenced by v0
            and the
            element is indexed by v1. The element will be put into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">4B<br>
          </td>
          <td style="vertical-align: top;">aput vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Puts the integer value in vx
            into an element of an integer array. The
            element is indexed by vz, the array object is referenced by
            vy. </td>
          <td style="vertical-align: top;">4B00 0305 - aput v0, v3, v5<br>
            Puts the integer value in v2 into an integer array
            referenced by v0. The target array element is indexed by v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">4C<br>
          </td>
          <td style="vertical-align: top;">aput-wide vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Puts the double/long value in
            vx,vx+1 into a double/long array. The array is referenced by
            vy, the
            element is indexed by vz.<br>
          </td>
          <td style="vertical-align: top;">4C05 0104 - aput-wide v5, v1,
            v4<br>
            Puts the double/long value in v5,v6 into a double/long array
            referenced by v1. The target array element is indexed by v4.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">4D<br>
          </td>
          <td style="vertical-align: top;">aput-object vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Puts the object reference
            value
            in vx into an element of an object reference array. The
            element is indexed by vz, the array object is referenced by
            vy. </td>
          <td style="vertical-align: top;">4D02 0100 - aput-object v2,
            v1,
            v0<br>
            Puts the object reference value in v2 into an object
            reference array
            referenced by v0. The target array element is indexed by v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">4E<br>
          </td>
          <td style="vertical-align: top;">aput-boolean vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Puts the boolean value
            in vx into an element of a boolean array. The
            element is indexed by vz, the array object is referenced by
            vy. </td>
          <td style="vertical-align: top;">4E01 0002 - aput-boolean v1,
            v0,
            v2<br>
            Puts the boolean value in v1 into an object reference array
            referenced by v0. The target array element is indexed by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">4F<br>
          </td>
          <td style="vertical-align: top;">aput-byte vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Puts the byte value
            in vx into an element of a byte array. The
            element is indexed by vz, the array object is referenced by
            vy. </td>
          <td style="vertical-align: top;">4F02 0001 - aput-byte v2, v0,
            v1<br>
            Puts the boolean value in v2 into a byte array
            referenced by v0. The target array element is indexed by v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">50<br>
          </td>
          <td style="vertical-align: top;">aput-char vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Puts the char value in vx
            into
            an element of a character array. The
            element is indexed by vz, the array object is referenced by
            vy. </td>
          <td style="vertical-align: top;">5003 0001 - aput-char v3, v0,
            v1<br>
            Puts the character value in v3 into a character array
            referenced by v0.
            The target array element is indexed by v1. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">51<br>
          </td>
          <td style="vertical-align: top;">aput-short vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Puts the short value in vx
            into
            an element of a short array. The
            element is indexed by vz, the array object is referenced by
            vy. </td>
          <td style="vertical-align: top;">5102 0001 - aput-short v2,
            v0, v1<br>
            Puts the short value in v2 into a character array referenced
            by v0.
            The target array element is indexed by v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">52<br>
          </td>
          <td style="vertical-align: top;">iget vx, vy, field_id<br>
          </td>
          <td style="vertical-align: top;">Reads an instance field into
            vx.
            The instance is referenced by vy.<br>
          </td>
          <td style="vertical-align: top;">5210 0300 - iget v0, v1,
            Test2.i6:I // field@0003<br>
            Reads field@0003 into v0 (entry #3 in the field id table).
            The instance
            is referenced by v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">53<br>
          </td>
          <td style="vertical-align: top;">iget-wide vx,vy,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads an instance field into
            vx<sup>1</sup>.
            The
            instance is referenced by vy.<br>
          </td>
          <td style="vertical-align: top;">5320 0400 - iget-wide v0, v2,
            Test2.l0:J // field@0004<br>
            Reads field@0004 into v0 and v1 registers (entry #4 in the
            field id
            table). The instance is referenced by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">54<br>
          </td>
          <td style="vertical-align: top;">iget-object vx,vy,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads an object reference
            instance field into vx. The instance is referenced by vy.<br>
          </td>
          <td style="vertical-align: top;">iget-object v1, v2,
            LineReader.fis:Ljava/io/FileInputStream; // field@0002<br>
            Reads field@0002 into v1&nbsp; (entry #2 in the field id
            table). The instance is referenced by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">55<br>
          </td>
          <td style="vertical-align: top;">iget-boolean vx,vy,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads a boolean instance
            field
            into vx. The instance is referenced by vy.<br>
          </td>
          <td style="vertical-align: top;">55FC 0000 - iget-boolean v12,
            v15, Test2.b0:Z // field@0000<br>
            Reads the boolean field@0000 into v12 register (entry #0 in
            the field
            id table). The instance is referenced by v15.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">56<br>
          </td>
          <td style="vertical-align: top;">iget-byte vx,vy,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads a byte instance field
            into vx. The instance is referenced by vy. </td>
          <td style="vertical-align: top;">5632 0100 - iget-byte v2, v3,
            Test3.bi1:B // field@0001<br>
            Reads the char field@0001 into v2 register (entry #1 in the
            field
            id table). The instance is referenced by v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">57<br>
          </td>
          <td style="vertical-align: top;">iget-char vx,vy,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads a char instance field
            into vx. The instance is referenced by vy. </td>
          <td style="vertical-align: top;">5720 0300 - iget-char v0, v2,
            Test3.ci1:C // field@0003<br>
            Reads the char field@0003 into v0 register (entry #3 in the
            field
            id table). The instance is referenced by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">58<br>
          </td>
          <td style="vertical-align: top;">iget-short vx,vy,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads a short instance field
            into vx. The instance is referenced by vy. </td>
          <td style="vertical-align: top;">5830 0800 - iget-short v0,
            v3,
            Test3.si1:S // field@0008<br>
            Reads the short field@0008 into v0 register (entry #8 in the
            field
            id table). The instance is referenced by v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">59<br>
          </td>
          <td style="vertical-align: top;">iput vx,vy, field_id<br>
          </td>
          <td style="vertical-align: top;">Puts vx into an instance
            field.
            The instance is referenced by vy.<br>
          </td>
          <td style="vertical-align: top;">5920 0200 - iput v0,v2,
            Test2.i6:I // field@0002<br>
            Stores v0 into field@0002 (entry #2 in the field id table).
            The
            instance is referenced by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">5A<br>
          </td>
          <td style="vertical-align: top;">iput-wide vx,vy, field_id<br>
          </td>
          <td style="vertical-align: top;">Puts the wide value located
            in
            vx and vx+1 registers into an instance field. The instance
            is
            referenced by vy.<br>
          </td>
          <td style="vertical-align: top;">5A20 0000 - iput-wide v0,v2,
            Test2.d0:D // field@0000 <br>
            Stores the wide value in v0, v1 registers into field@0000
            (entry #0 in
            the field id table). The instance is referenced by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">5B<br>
          </td>
          <td style="vertical-align: top;">iput-object vx,vy,field_id<br>
          </td>
          <td style="vertical-align: top;">Puts the object reference in
            vx
            into an instance field. The instance is referenced by vy.<br>
          </td>
          <td style="vertical-align: top;">5B20 0000 - iput-object v0,
            v2,
            LineReader.bis:Ljava/io/BufferedInputStream; // field@0000<br>
            Stores the object reference in v0 into field@0000 (entry #0
            in the
            field table). The instance is referenced by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">5C<br>
          </td>
          <td style="vertical-align: top;">iput-boolean vx,vy, field_id<br>
          </td>
          <td style="vertical-align: top;">Puts the boolean value
            located
            in vx into an instance field. The instance is referenced by
            vy.<br>
          </td>
          <td style="vertical-align: top;">5C30 0000 - iput-boolean v0,
            v3,
            Test2.b0:Z // field@0000<br>
            Puts the boolean value in v0 into field@0000 (entry #0 in
            the field id
            table). The instance is referenced by v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">5D<br>
          </td>
          <td style="vertical-align: top;">iput-byte vx,vy,field_id<br>
          </td>
          <td style="vertical-align: top;">Puts the byte value located
            in vx into an instance field. The instance is referenced by
            vy. </td>
          <td style="vertical-align: top;">5D20 0100 - iput-byte v0, v2,
            Test3.bi1:B // field@0001<br>
            Puts the boolean value in v0 into field@0001 (entry #1 in
            the field id
            table). The instance is referenced by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">5E<br>
          </td>
          <td style="vertical-align: top;">iput-char vx,vy,field_id<br>
          </td>
          <td style="vertical-align: top;">Puts the char value located
            in vx into an instance field. The instance is referenced by
            vy. </td>
          <td style="vertical-align: top;">5E20 0300 - iput-char v0, v2,
            Test3.ci1:C // field@0003<br>
            Puts the char value in v0 into field@0003 (entry #3 in the
            field id
            table). The instance is referenced by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">5F<br>
          </td>
          <td style="vertical-align: top;">iput-short vx,vy,field_id<br>
          </td>
          <td style="vertical-align: top;">Puts the short value located
            in vx into an instance field. The instance is referenced by
            vy. </td>
          <td style="vertical-align: top;">5F21 0800 - iput-short v1,
            v2,
            Test3.si1:S // field@0008<br>
            Puts the short value in v1 into field@0008 (entry #8 in the
            field id
            table). The instance is referenced by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">60<br>
          </td>
          <td style="vertical-align: top;">sget vx,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads the integer field
            identified by the field_id into vx. </td>
          <td style="vertical-align: top;">6000 0700 - sget v0,
            Test3.is1:I
            // field@0007<br>
            Reads field@0007 (entry #7 in the field id table) into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">61<br>
          </td>
          <td style="vertical-align: top;">sget-wide vx, field_id<br>
          </td>
          <td style="vertical-align: top;">Reads the static field
            identified by the field_id into vx and vx+1 registers.<br>
          </td>
          <td style="vertical-align: top;">6100 0500 - sget-wide v0,
            Test2.l1:J // field@0005<br>
            Reads field@0005 (entry #5 in the field id table) into v0
            and v1
            registers.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">62<br>
          </td>
          <td style="vertical-align: top;">sget-object vx,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads the object reference
            field
            identified by the field_id into vx. </td>
          <td style="vertical-align: top;">6201 0C00 - sget-object v1,
            Test3.os1:Ljava/lang/Object; // field@000c<br>
            Reads field@000c (entry #CH in the field id table) into v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">63<br>
          </td>
          <td style="vertical-align: top;">sget-boolean vx,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads the boolean static
            field
            identified by the field_id into vx.</td>
          <td style="vertical-align: top;">6300 0C00 - sget-boolean v0,
            Test2.sb:Z // field@000c<br>
            Reads boolean field@000c (entry #12 in the field id table)
            into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">64<br>
          </td>
          <td style="vertical-align: top;">sget-byte vx,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads the byte static field
            identified by the field_id into vx. </td>
          <td style="vertical-align: top;">6400 0200 - sget-byte v0,
            Test3.bs1:B // field@0002<br>
            Reads byte field@0002 (entry #2 in the field id table) into
            v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">65<br>
          </td>
          <td style="vertical-align: top;">sget-char vx,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads the char static field
            identified by the field_id into vx. </td>
          <td style="vertical-align: top;">6500 0700 - sget-char v0,
            Test3.cs1:C // field@0007<br>
            Reads byte field@0007 (entry #7 in the field id table) into
            v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">66<br>
          </td>
          <td style="vertical-align: top;">sget-short vx,field_id<br>
          </td>
          <td style="vertical-align: top;">Reads the short static field
            identified by the field_id into vx. </td>
          <td style="vertical-align: top;">6600 0B00 - sget-short v0,
            Test3.ss1:S // field@000b<br>
            Reads short field@000b (entry #BH in the field id table)
            into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">67<br>
          </td>
          <td style="vertical-align: top;">sput vx, field_id<br>
          </td>
          <td style="vertical-align: top;">Puts vx into a static field.<br>
          </td>
          <td style="vertical-align: top;">6700 0100 - sput v0,
            Test2.i5:I
            // field@0001<br>
            Stores v0 into field@0001 (entry #1 in the field id table).<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">68<br>
          </td>
          <td style="vertical-align: top;">sput-wide vx, field_id<br>
          </td>
          <td style="vertical-align: top;">Puts vx and vx+1 into a
            static
            field.<br>
          </td>
          <td style="vertical-align: top;">6800 0500 - sput-wide v0,
            Test2.l1:J // field@0005<br>
            Puts the long value in v0 and v1 into the field@0005 static
            field
            (entry #5 in the field id table).<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">69<br>
          </td>
          <td style="vertical-align: top;">sput-object vx,field_id<br>
          </td>
          <td style="vertical-align: top;">Puts object reference in vx
            into
            a static field. </td>
          <td style="vertical-align: top;">6900 0c00 - sput-object v0,
            Test3.os1:Ljava/lang/Object; // field@000c<br>
            Puts the object reference value in v0 into the field@000c
            static field
            (entry #CH in the field id table).<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">6A<br>
          </td>
          <td style="vertical-align: top;">sput-boolean vx,field_id<br>
          </td>
          <td style="vertical-align: top;">Puts boolean value in vx into
            a
            static field. </td>
          <td style="vertical-align: top;">6A00 0300 - sput-boolean v0,
            Test3.bls1:Z // field@0003<br>
            Puts the byte value in v0 into the field@0003 static field
            (entry #3 in the field id table).<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">6B<br>
          </td>
          <td style="vertical-align: top;">sput-byte vx,field_id<br>
          </td>
          <td style="vertical-align: top;">Puts byte value in vx into a
            static field. </td>
          <td style="vertical-align: top;">6B00 0200 - sput-byte v0,
            Test3.bs1:B // field@0002<br>
            Puts the byte value in v0 into the field@0002 static field
            (entry #2 in the field id table).<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">6C<br>
          </td>
          <td style="vertical-align: top;">sput-char vx,field_id<br>
          </td>
          <td style="vertical-align: top;">Puts char value in vx into a
            static field. </td>
          <td style="vertical-align: top;">6C01 0700 - sput-char v1,
            Test3.cs1:C // field@0007<br>
            Puts the char value in v1 into the field@0007 static field
            (entry #7 in the field id table).<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">6D<br>
          </td>
          <td style="vertical-align: top;">sput-short vx,field_id<br>
          </td>
          <td style="vertical-align: top;">Puts short value in vx into a
            static field. </td>
          <td style="vertical-align: top;">6D00 0B00 - sput-short v0,
            Test3.ss1:S // field@000b<br>
            Puts the short value in v0 into the field@000b static field
            (entry #BH in the field id table).<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">6E<br>
          </td>
          <td style="vertical-align: top;">invoke-virtual { parameters
            },
            methodtocall<br>
          </td>
          <td style="vertical-align: top;">Invokes a virtual method with
            parameters.<br>
          </td>
          <td style="vertical-align: top;">6E53 0600 0421 -
            invoke-virtual
            { v4, v0, v1, v2, v3}, Test2.method5:(IIII)V // method@0006<br>
            Invokes the 6th method in the method table with the
            following
            arguments: v4 is the "this" instance, v0, v1, v2, and v3 are
            the method
            parameters. The method has 5 arguments (4 MSB bits of the
            second byte)<sup>5</sup>.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">6F<br>
          </td>
          <td style="vertical-align: top;">invoke-super
            {parameter},methodtocall<br>
          </td>
          <td style="vertical-align: top;">Invokes the virtual method of
            the immediate parent class. </td>
          <td style="vertical-align: top;">6F10 A601 0100 invoke-super
            {v1},java.io.FilterOutputStream.close:()V // method@01a6<br>
            Invokes method@01a6 with one parameter, v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">70<br>
          </td>
          <td style="vertical-align: top;">invoke-direct { parameters },
            methodtocall<br>
          </td>
          <td style="vertical-align: top;">Invokes a method with
            parameters
            without the virtual method resolution.<br>
          </td>
          <td style="vertical-align: top;">7010 0800 0100 -
            invoke-direct
            {v1}, java.lang.Object.&lt;init&gt;:()V // method@0008<br>
            Invokes the 8th method in the method table with just one
            parameter, v1
            is the "this" instance<sup>5</sup>.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">71<br>
          </td>
          <td style="vertical-align: top;">invoke-static {parameters},
            methodtocall<br>
          </td>
          <td style="vertical-align: top;">Invokes a static method with
            parameters.<br>
          </td>
          <td style="vertical-align: top;">7110 3400 0400 -
            invoke-static
            {v4}, java.lang.Integer.parseInt:( Ljava/lang/String;)I //
            method@0034<br>
            Invokes method@34 static method. The method is called with
            one
            parameter, v4<sup>5</sup>.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">72<br>
          </td>
          <td style="vertical-align: top;">invoke-interface
            {parameters},methodtocall<br>
          </td>
          <td style="vertical-align: top;">Invokes an interface method.<br>
          </td>
          <td style="vertical-align: top;">7240 2102 3154
            invoke-interface
            {v1, v3, v4, v5},
            mwfw.IReceivingProtocolAdapter.receivePackage:(<br>
            ILjava/lang/String;Ljava/io/InputStream;)Z // method@0221<br>
            Invokes method@221 interface method using parameters in
            v1,v3,v4 and v5<sup>5</sup>.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">73<br>
          </td>
          <td style="vertical-align: top;">unused_73<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">74<br>
          </td>
          <td style="vertical-align: top;">invoke-virtual/range
            {vx..vy},methodtocall<br>
          </td>
          <td style="vertical-align: top;">Invokes virtual method with a
            range of registers. The instruction
            specifies the first register and the number of registers to
            be passed
            to the method. </td>
          <td style="vertical-align: top;">7403 0600 1300 -
            invoke-virtual
            {v19..v21}, Test2.method5:(IIII)V // method@0006<br>
            Invokes the 6th method in the method table with the
            following
            arguments: v19 is the "this" instance, v20 and v21 are the
            method
            parameters.&nbsp; </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">75<br>
          </td>
          <td style="vertical-align: top;">invoke-super/range<br>
          </td>
          <td style="vertical-align: top;">Invokes&nbsp; the virtual
            method
            of the immediate parent class. The instruction specifies the
            first
            register and the number of registers to be passed to the
            method. </td>
          <td style="vertical-align: top;">7501 A601 0100 invoke-super
            {v1},java.io.FilterOutputStream.close:()V // method@01a6<br>
            Invokes method@01a6 with one parameter, v1. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">76<br>
          </td>
          <td style="vertical-align: top;">invoke-direct/range
            {vx..vy},methodtocall<br>
          </td>
          <td style="vertical-align: top;">Invokes direct method with a
            range of registers. The instruction specifies the first
            register and
            the number of registers to be passed to the method.<br>
          </td>
          <td style="vertical-align: top;">7603 3A00 1300 -
            invoke-direct/range
            {v19..21},java.lang.Object.&lt;init&gt;:()V //
            method@003a<br>
            Invokes method@3A with 1 parameters (second byte of the
            instruction=03). The parameter is stored in v19 (5th,6th
            bytes of the
            instruction).<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">77<br>
          </td>
          <td style="vertical-align: top;">invoke-static/range
            {vx..vy},methodtocall<br>
          </td>
          <td style="vertical-align: top;">Invokes static method with a
            range of registers. The instruction
            specifies the first register and the number of registers to
            be passed
            to the method. </td>
          <td style="vertical-align: top;">7703 3A00 1300 -
            invoke-static/range {v19..21},java.lang.Integer.parseInt:(
            Ljava/lang/String;)I // method@0034<br>
            Invokes method@3A with 1 parameters (second byte of the
            instruction=03). The parameter is stored in v19 (5th,6th
            bytes of the
            instruction). </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">78<br>
          </td>
          <td style="vertical-align: top;">invoke-interface-range<br>
          </td>
          <td style="vertical-align: top;">Invokes an interface method
            with
            a range of registers. The instruction
            specifies the first register and the number of registers to
            be passed
            to the method. </td>
          <td style="vertical-align: top;">7840 2102 0100
            invoke-interface
            {v1..v4}, mwfw.IReceivingProtocolAdapter.receivePackage:(<br>
            ILjava/lang/String;Ljava/io/InputStream;)Z // method@0221<br>
            Invokes method@221 interface method using parameters in
            v1..v4. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">79<br>
          </td>
          <td style="vertical-align: top;">unused_79<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">7A<br>
          </td>
          <td style="vertical-align: top;">unused_7A<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">7B<br>
          </td>
          <td style="vertical-align: top;">neg-int vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx=-vy.<br>
          </td>
          <td style="vertical-align: top;">7B01 - neg-int v1,v0<br>
            Calculates -v0 and stores the result in v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">7C<br>
          </td>
          <td style="vertical-align: top;">not-int vx,vy<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">7D<br>
          </td>
          <td style="vertical-align: top;">neg-long vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx,vx+1=-(vy,vy+1)
            <br>
          </td>
          <td style="vertical-align: top;">7D02 - neg-long v2,v0<br>
            Calculates -(v0,v1) and stores the result into (v2,v3)<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">7E<br>
          </td>
          <td style="vertical-align: top;">not-long vx,vy<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">7F<br>
          </td>
          <td style="vertical-align: top;">neg-float vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx=-vy<br>
          </td>
          <td style="vertical-align: top;">7F01 - neg-float v1,v0<br>
            Calculates -v0 and stores the result into v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">80<br>
          </td>
          <td style="vertical-align: top;">neg-double vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx,vx+1=-(vy,vy+1)
          </td>
          <td style="vertical-align: top;">8002 - neg-double v2,v0<br>
            Calculates -(v0,v1) and stores the result into (v2,v3)<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">81<br>
          </td>
          <td style="vertical-align: top;">int-to-long vx, vy<br>
          </td>
          <td style="vertical-align: top;">Converts the integer in vy
            into
            a long in vx,vx+1.<br>
          </td>
          <td style="vertical-align: top;">8106 - int-to-long v6, v0<br>
            Converts an integer in v0 into a long in v6,v7.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">82<br>
          </td>
          <td style="vertical-align: top;">int-to-float vx, vy<br>
          </td>
          <td style="vertical-align: top;">Converts the integer in vx
            into
            a float in vx.<br>
          </td>
          <td style="vertical-align: top;">8206 - int-to-float v6, v0<br>
            Converts the integer in v0 into a float in v6.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">83<br>
          </td>
          <td style="vertical-align: top;">int-to-double vx, vy<br>
          </td>
          <td style="vertical-align: top;">Converts the integer in vy
            into
            the double in vx,vx+1.<br>
          </td>
          <td style="vertical-align: top;">8306 - int-to-double v6, v0<br>
            Converts the integer in v0 into a double in v6,v7<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">84<br>
          </td>
          <td style="vertical-align: top;">long-to-int vx,vy<br>
          </td>
          <td style="vertical-align: top;">Converts the long value in
            vy,vy+1 into an integer in vx.<br>
          </td>
          <td style="vertical-align: top;">8424 - long-to-int v4, v2<br>
            Converts the long value in v2,v3 into an integer value in
            v4.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">85<br>
          </td>
          <td style="vertical-align: top;">long-to-float vx, vy<br>
          </td>
          <td style="vertical-align: top;">Converts the long value in
            vy,vy+1 into a float in vx.<br>
          </td>
          <td style="vertical-align: top;">8510 - long-to-float v0, v1<br>
            Convcerts the long value in v1,v2 into a float value in v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">86<br>
          </td>
          <td style="vertical-align: top;">long-to-double vx, vy<br>
          </td>
          <td style="vertical-align: top;">Converts the long value in
            vy,vy+1 into a double value in vx,vx+1.<br>
          </td>
          <td style="vertical-align: top;">8610 - long-to-double v0, v1<br>
            Converts the long value in v1,v2 into a double value in
            v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">87<br>
          </td>
          <td style="vertical-align: top;">float-to-int vx, vy<br>
          </td>
          <td style="vertical-align: top;">Converts the float value in
            vy
            into an integer value in vx.<br>
          </td>
          <td style="vertical-align: top;">8730 - float-to-int v0, v3<br>
            Converts the float value in v3 into an integer value in v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">88<br>
          </td>
          <td style="vertical-align: top;">float-to-long vx,vy<br>
          </td>
          <td style="vertical-align: top;">Converts the float value in
            vy
            into a long value in vx.<br>
          </td>
          <td style="vertical-align: top;">8830 - float-to-long v0, v3<br>
            Converts the float value in v3 into a long value in v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">89<br>
          </td>
          <td style="vertical-align: top;">float-to-double vx, vy<br>
          </td>
          <td style="vertical-align: top;">Converts the float value in
            vy
            into a double value in vx,vx+1.<br>
          </td>
          <td style="vertical-align: top;">8930 - float-to-double v0, v3<br>
            Converts the float value in v3 into a double value in v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">8A<br>
          </td>
          <td style="vertical-align: top;">double-to-int vx, vy<br>
          </td>
          <td style="vertical-align: top;">Converts the double value in
            vy,vy+1 into an integer value in vx.<br>
          </td>
          <td style="vertical-align: top;">8A40&nbsp; - double-to-int
            v0, v4<br>
            Converts the double value in v4,v5 into an integer value in
            v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">8B<br>
          </td>
          <td style="vertical-align: top;">double-to-long vx, vy<br>
          </td>
          <td style="vertical-align: top;">Converts the double value in
            vy,vy+1 into a long value in vx,vx+1.<br>
          </td>
          <td style="vertical-align: top;">8B40 - double-to-long v0, v4<br>
            Converts the double value in v4,v5 into a long value in
            v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">8C<br>
          </td>
          <td style="vertical-align: top;">double-to-float vx, vy<br>
          </td>
          <td style="vertical-align: top;">Converts the double value in
            vy,vy+1 into a float value in vx.<br>
          </td>
          <td style="vertical-align: top;">8C40 - double-to-float v0, v4<br>
            Converts the double value in v4,v5 into a float value in
            v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">8D<br>
          </td>
          <td style="vertical-align: top;">int-to-byte vx,vy<br>
          </td>
          <td style="vertical-align: top;">Converts the int value in vy
            to
            a byte value and stores it in vx.<br>
          </td>
          <td style="vertical-align: top;">8D00 - int-to-byte v0, v0<br>
            Converts the integer in v0 into a byte and puts the byte
            value into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">8E<br>
          </td>
          <td style="vertical-align: top;">int-to-char vx,vy<br>
          </td>
          <td style="vertical-align: top;">Converts the int value in vy
            to
            a char value and stores it in vx.<br>
          </td>
          <td style="vertical-align: top;">8E33&nbsp; - int-to-char v3,
            v3<br>
            Converts the integer in v3 into a char and puts the char
            value into v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">8F<br>
          </td>
          <td style="vertical-align: top;">int-to-short vx,vy<br>
          </td>
          <td style="vertical-align: top;">Converts the int value in vy
            to
            a short value and stores it in vx. </td>
          <td style="vertical-align: top;">8F00 - int-to-short v0, v0<br>
            Converts the integer in v0 into a short and puts the short
            value into
            v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">90<br>
          </td>
          <td style="vertical-align: top;">add-int vx,vy,vz</td>
          <td style="vertical-align: top;">Calculates vy+vz and puts the
            result into vx.</td>
          <td style="vertical-align: top;">9000 0203 - add-int v0, v2,
            v3<br>
            Adds v3 to v2 and puts the result into v0<sup>4</sup>.</td>
        </tr>
        <tr>
          <td style="vertical-align: top;">91<br>
          </td>
          <td style="vertical-align: top;">sub-int vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy-vz and puts the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">9100 0203 - sub-int v0, v2,
            v3<br>
            Subtracts v3 from v2 and puts the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">92<br>
          </td>
          <td style="vertical-align: top;">mul-int vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Multiplies vz with wy and
            puts
            the result int vx.<br>
          </td>
          <td style="vertical-align: top;">9200 0203 - mul-int v0,v2,v3<br>
            Multiplies v2 with w3 and puts the result into v0<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">93<br>
          </td>
          <td style="vertical-align: top;">div-int vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Divides vy with vz and puts
            the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">9303 0001 - div-int v3, v0,
            v1<br>
            Divides v0 with v1 and puts the result into v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">94<br>
          </td>
          <td style="vertical-align: top;">rem-int vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy % vz and puts
            the
            result into vx. </td>
          <td style="vertical-align: top;">9400 0203 - rem-int v0, v2,
            v3<br>
            Calculates v3 % v2 and puts the result into v0. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">95<br>
          </td>
          <td style="vertical-align: top;">and-int vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy AND vz and puts
            the result into vx.<br>
          </td>
          <td style="vertical-align: top;">9503 0001 - and-int v3, v0,
            v1<br>
            Calculates v0 AND v1 and puts the result into v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">96<br>
          </td>
          <td style="vertical-align: top;">or-int vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy OR vz and puts
            the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">9603 0001 - or-int v3, v0, v1<br>
            Calculates v0 OR v1 and puts the result into v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">97<br>
          </td>
          <td style="vertical-align: top;">xor-int vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy XOR vz and puts
            the result into vx.</td>
          <td style="vertical-align: top;">9703 0001 - xor-int v3, v0,
            v1<br>
            Calculates v0 XOR v1 and puts the result into v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">98<br>
          </td>
          <td style="vertical-align: top;">shl-int vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Shift vy left by the
            positions
            specified by vz and store the result into vx.</td>
          <td style="vertical-align: top;">9802 0001 - shl-int v2, v0,
            v1<br>
            Shift v0 left by the positions specified by v1 and store the
            result in
            v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">99<br>
          </td>
          <td style="vertical-align: top;">shr-int vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Shift vy right by the
            positions
            specified by vz and store the result into vx.<br>
          </td>
          <td style="vertical-align: top;">9902 0001 - shr-int v2, v0,
            v1<br>
            Shift v0 right by the positions specified by v1 and store
            the result in
            v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">9A<br>
          </td>
          <td style="vertical-align: top;">ushr-int vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Unsigned shift right
            (&gt;&gt;&gt;) vy by the positions specified by vz and store
            the result
            into vx.<br>
          </td>
          <td style="vertical-align: top;">9A02 0001 - ushr-int v2, v0,
            v1<br>
            Unsigned shift v0 right by the positions specified by v1 and
            store the
            result in v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">9B<br>
          </td>
          <td style="vertical-align: top;">add-long vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Adds vy to vz and puts the
            result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">9B00 0305 - add-long v0, v3,
            v5<br>
            The long value in v3,v4 is added to the value in v5,v6 and
            the result
            is stored in v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">9C<br>
          </td>
          <td style="vertical-align: top;">sub-long vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy-vz and puts the
            result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">9C00 0305 - sub-long v0, v3,
            v5<br>
            Subtracts the long value in v5,v6 from the long value in
            v3,v4 and puts
            the result into v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">9D<br>
          </td>
          <td style="vertical-align: top;">mul-long vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy*vz and puts the
            result into vx<sup>1</sup>. </td>
          <td style="vertical-align: top;">9D00 0305 - mul-long v0, v3,
            v5<br>
            Multiplies the long value in v5,v6 with the long value in
            v3,v4 and
            puts
            the result into v0,v1. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">9E<br>
          </td>
          <td style="vertical-align: top;">div-long vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy/vz and puts the
            result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">9E06 0002 - div-long v6, v0,
            v2<br>
            Divides the long value in v0,v1 with the long value in v2,v3
            and pust
            the result into v6,v7.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">9F<br>
          </td>
          <td style="vertical-align: top;">rem-long vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy % vz and puts
            the
            result into vx<sup>1</sup>. </td>
          <td style="vertical-align: top;">9F06 0002 - rem-long v6, v0,
            v2<br>
            Calculates v0,v1 %&nbsp; v2,v3 and puts
            the result into v6,v7. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">A0<br>
          </td>
          <td style="vertical-align: top;">and-long vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Calculates the vy AND vz and
            puts the result into vx<sup>1</sup>.</td>
          <td style="vertical-align: top;">A006 0002 - and-long v6, v0,
            v2<br>
            Calculates v0,v1 AND v2,v3 and puts the result into v6,v7.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">A1<br>
          </td>
          <td style="vertical-align: top;">or-long vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Calculates the vy OR vz and
            puts
            the result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">A106 0002 - or-long v6, v0,
            v2<br>
            Calculates v0,v1 OR v2,v3 and puts the result into v6,v7.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">A2<br>
          </td>
          <td style="vertical-align: top;">xor-long vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Calculates the vy XOR vz and
            puts the result into vx<sup>1</sup>.</td>
          <td style="vertical-align: top;">A206 0002 - xor-long v6, v0,
            v2<br>
            Calculates v0,v1 XOR v2,v3 and puts the result into v6,v7.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">A3<br>
          </td>
          <td style="vertical-align: top;">shl-long vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Shifts left vy by vz
            positions
            and stores the result in vx<sup>1</sup>.</td>
          <td style="vertical-align: top;">A302 0004 - shl-long v2, v0,
            v4<br>
            Shift v0,v1 by postions specified by v4 and puts the result
            into v2,v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">A4<br>
          </td>
          <td style="vertical-align: top;">shr-long vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Shifts right vy by vz
            positions
            and stores the result in vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">A402 0004 - shr-long v2, v0,
            v4<br>
            Shift v0,v1 by postions specified by v4 and puts the result
            into v2,v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">A5<br>
          </td>
          <td style="vertical-align: top;">ushr-long vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Unsigned shifts right vy by
            vz
            positions and stores the result in vx<sup>1</sup>.</td>
          <td style="vertical-align: top;">A502 0004 - ushr-long v2, v0,
            v4<br>
            Unsigned shift v0,v1 by postions specified by v4 and puts
            the result
            into v2,v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">A6<br>
          </td>
          <td style="vertical-align: top;">add-float vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Adds vy to vz and puts the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">A600 0203 - add-float v0, v2,
            v3<br>
            Adds the floating point numbers in v2 and v3 and puts the
            result into
            v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">A7<br>
          </td>
          <td style="vertical-align: top;">sub-float vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy-vz and puts the
            result into vx. </td>
          <td style="vertical-align: top;">A700 0203 - sub-float v0, v2,
            v3<br>
            Calculates v2-v3 and puts the result into
            v0. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">A8<br>
          </td>
          <td style="vertical-align: top;">mul-float vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Multiplies vy with vz and
            puts
            the result into vx.<br>
          </td>
          <td style="vertical-align: top;">A803 0001 - mul-float v3, v0,
            v1<br>
            Multiplies v0 with v1 and puts the result into v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">A9<br>
          </td>
          <td style="vertical-align: top;">div-float vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy/vz and puts the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">A903 0001 - div-float v3, v0,
            v1<br>
            Divides v0 with v1 and puts the result into v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">AA<br>
          </td>
          <td style="vertical-align: top;">rem-float vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy % vz and puts
            the
            result into vx. </td>
          <td style="vertical-align: top;">AA03 0001 - rem-float v3, v0,
            v1<br>
            Calculates v0 %&nbsp; v1 and puts the result into v3. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">AB<br>
          </td>
          <td style="vertical-align: top;">add-double vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Adds vy to vz and puts the
            result into vx<sup>1</sup>. <br>
          </td>
          <td style="vertical-align: top;">AB00 0305 - add-double v0,
            v3, v5<br>
            Adds the double value in v5,v6 registers to the double value
            in v3,v4
            registers and places the result&nbsp; in v0,v1 registers.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">AC<br>
          </td>
          <td style="vertical-align: top;">sub-double vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy-vz and puts the
            result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">AC00 0305 - sub-double v0,
            v3, v5<br>
            Subtracts the value in v5,v6 from the value in v3,v4 and
            puts the
            result into v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">AD<br>
          </td>
          <td style="vertical-align: top;">mul-double vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Multiplies vy with vz and
            puts
            the result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">AD06 0002 - mul-double v6,
            v0, v2<br>
            Multiplies the double value in v0,v1 with the double value
            in v2,v3 and
            puts the result into v6,v7.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">AE<br>
          </td>
          <td style="vertical-align: top;">div-double vx, vy, vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy/vz and puts the
            result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">AE06 0002 - div-double v6,
            v0, v2<br>
            Divides the double value in v0,v1 with the double value in
            v2,v3 and
            puts the result into v6,v7.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">AF<br>
          </td>
          <td style="vertical-align: top;">rem-double vx,vy,vz<br>
          </td>
          <td style="vertical-align: top;">Calculates vy % vz and puts
            the
            result into vx<sup>1</sup>. </td>
          <td style="vertical-align: top;">AF06 0002 - rem-double v6,
            v0, v2<br>
            Calculates v0,v1 % v2,v3 and
            puts the result into v6,v7. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">B0<br>
          </td>
          <td style="vertical-align: top;">add-int/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Adds vy to vx.<br>
          </td>
          <td style="vertical-align: top;">B010 - add-int/2addr v0,v1<br>
            Adds v1 to v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">B1<br>
          </td>
          <td style="vertical-align: top;">sub-int/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx-vy and puts the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">B140 - sub-int/2addr v0, v4<br>
            Subtracts v4 from v0 and puts the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">B2<br>
          </td>
          <td style="vertical-align: top;">mul-int/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Multiplies vx with vy.<br>
          </td>
          <td style="vertical-align: top;">B210 - mul-int/2addr v0, v1<br>
            Multiples v0 with v1 and puts the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">B3<br>
          </td>
          <td style="vertical-align: top;">div-int/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Divides vx with vy and puts
            the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">B310 - div-int/2addr v0, v1<br>
            Divides v0 with v1 and puts the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">B4<br>
          </td>
          <td style="vertical-align: top;">rem-int/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx % vy and puts
            the
            result into vx </td>
          <td style="vertical-align: top;">B410 - rem-int/2addr v0, v1<br>
            &nbsp;Calculates v0 % v1 and puts the result into v0. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">B5<br>
          </td>
          <td style="vertical-align: top;">and-int/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx AND vy and puts
            the result into vx.<br>
          </td>
          <td style="vertical-align: top;">B510 - and-int/2addr v0, v1<br>
            Calculates v0 AND v1 and puts the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">B6<br>
          </td>
          <td style="vertical-align: top;">or-int/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx OR vy and puts
            the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">B610 - or-int/2addr v0, v1<br>
            Calculates v0 OR v1 and puts the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">B7<br>
          </td>
          <td style="vertical-align: top;">xor-int/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx XOR vy and puts
            the result into vx.</td>
          <td style="vertical-align: top;">B710&nbsp; - xor-int/2addr
            v0, v1<br>
            Calculates v0 XOR v1 and puts the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">B8<br>
          </td>
          <td style="vertical-align: top;">shl-int/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Shifts vx left by vy
            positions.<br>
          </td>
          <td style="vertical-align: top;">B810 - shl-int/2addr v0, v1<br>
            Shift v0 left by v1 positions.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">B9<br>
          </td>
          <td style="vertical-align: top;">shr-int/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Shifts vx right by vy
            positions.<br>
          </td>
          <td style="vertical-align: top;">B910 - shr-int/2addr v0, v1<br>
            Shift v0 right by v1 positions.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">BA<br>
          </td>
          <td style="vertical-align: top;">ushr-int/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Unsigned shift right
            (&gt;&gt;&gt;) vx by the positions specified by vy.<br>
          </td>
          <td style="vertical-align: top;">BA10 - ushr-int/2addr v0, v1<br>
            Unsigned shift v0 by the positions specified by v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">BB<br>
          </td>
          <td style="vertical-align: top;">add-long/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Adds vy to vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">BB20 - add-long/2addr v0, v2<br>
            Adds the long value in v2,v3 registers to the long value in
            v0,v1
            registers.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">BC<br>
          </td>
          <td style="vertical-align: top;">sub-long/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx-vy and puts the
            result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">BC70 - sub-long/2addr v0, v7<br>
            Subtracts the long value in v7,v8 from the long value in
            v0,v1 and puts
            the result into v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">BD<br>
          </td>
          <td style="vertical-align: top;">mul-long/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx*vy and puts the
            result into vx<sup>1</sup>. </td>
          <td style="vertical-align: top;">BD70 - mul-long/2addr v0, v7<br>
            Multiplies the long value in v7,v8 with the long value in
            v0,v1 and
            puts
            the result into v0,v1. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">BE<br>
          </td>
          <td style="vertical-align: top;">div-long/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx/vy and puts the
            result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">BE20 - div-long/2addr v0, v2<br>
            Divides the long value in v0,v1 with the long value in v2,v3
            and puts
            the result into v0,v1<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">BF<br>
          </td>
          <td style="vertical-align: top;">rem-long/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx % vy and puts
            the
            result into vx<sup>1</sup>. </td>
          <td style="vertical-align: top;">BF20 - rem-long/2addr v0, v2<br>
            Calculates v0,v1 % v2,v3 and puts
            the result into v0,v1 </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">C0<br>
          </td>
          <td style="vertical-align: top;">and-long/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx AND vy and puts
            the result into vx<sup>1</sup>.</td>
          <td style="vertical-align: top;">C020 - and-long/2addr v0, v2<br>
            Calculates v0,v1 OR v2,v3 and puts the result into v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">C1<br>
          </td>
          <td style="vertical-align: top;">or-long/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx OR vy and puts
            the
            result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">C120&nbsp; - or-long/2addr
            v0, v2<br>
            Calculates v0,v1 OR v2,v3 and puts the result into v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">C2<br>
          </td>
          <td style="vertical-align: top;">xor-long/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx XOR vy and puts
            the result into vx<sup>1</sup>.</td>
          <td style="vertical-align: top;">C220 - xor-long/2addr v0, v2<br>
            Calculates v0,v1 XOR v2,v3 and puts the result into v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">C3<br>
          </td>
          <td style="vertical-align: top;">shl-long/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Shifts left the value in
            vx,vx+1
            by the positions specified by vy and stores the result in
            vx,vx+1.<br>
          </td>
          <td style="vertical-align: top;">C320 - shl-long/2addr v0, v2<br>
            Shifts left v0,v1 by the positions specified by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">C4<br>
          </td>
          <td style="vertical-align: top;">shr-long/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Shifts right the value in
            vx,vx+1 by the positions specified by vy and stores the
            result in
            vx,vx+1.</td>
          <td style="vertical-align: top;">C420 - shr-long/2addr v0, v2<br>
            Shifts right v0,v1 by the positions specified by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">C5<br>
          </td>
          <td style="vertical-align: top;">ushr-long/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Unsigned shifts right the
            value
            in vx,vx+1 by the positions specified by vy and stores the
            result in
            vx,vx+1.</td>
          <td style="vertical-align: top;">C520 - ushr-long/2addr v0, v2<br>
            Unsigned shifts right v0,v1 by the positions specified by
            v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">C6<br>
          </td>
          <td style="vertical-align: top;">add-float/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Adds vy to vx. <br>
          </td>
          <td style="vertical-align: top;">C640 - add-float/2addr v0,v4<br>
            Adds v4 to v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">C7<br>
          </td>
          <td style="vertical-align: top;">sub-float/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx-vy and stores
            the
            result in vx. </td>
          <td style="vertical-align: top;">C740 - sub-float/2addr v0,v4<br>
            Adds v4 to v0. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">C8<br>
          </td>
          <td style="vertical-align: top;">mul-float/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Multiplies vx with vy.<br>
          </td>
          <td style="vertical-align: top;">C810 - mul-float/2addr v0, v1<br>
            Multiplies v0 with v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">C9<br>
          </td>
          <td style="vertical-align: top;">div-float/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx/vy and puts the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">C910 - div-float/2addr v0, v1<br>
            Divides v0 with v1 and puts the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">CA<br>
          </td>
          <td style="vertical-align: top;">rem-float/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx/vy and puts the
            result into vx. </td>
          <td style="vertical-align: top;">CA10 - rem-float/2addr v0, v1<br>
            &nbsp;Calculates v0 % v1 and puts the result into v0. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">CB<br>
          </td>
          <td style="vertical-align: top;">add-double/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Adds vy to vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">CB70 - add-double/2addr v0,
            v7<br>
            Adds v7 to v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">CC<br>
          </td>
          <td style="vertical-align: top;">sub-double/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx-vy and puts the
            result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">CC70 - sub-double/2addr v0,
            v7<br>
            Subtracts the value in v7,v8 from the value in v0,v1 and
            puts the
            result into v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">CD<br>
          </td>
          <td style="vertical-align: top;">mul-double/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Multiplies vx with vy<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">CD20 - mul-double/2addr v0,
            v2<br>
            Multiplies the double value in v0,v1 with the double value
            in v2,v3 and
            puts the result into v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">CE<br>
          </td>
          <td style="vertical-align: top;">div-double/2addr vx, vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx/vy and puts the
            result into vx<sup>1</sup>.<br>
          </td>
          <td style="vertical-align: top;">CE20 - div-double/2addr v0,
            v2<br>
            Divides the double value in v0,v1 with the double value in
            v2,v3 and
            puts the value into v0,v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">CF<br>
          </td>
          <td style="vertical-align: top;">rem-double/2addr vx,vy<br>
          </td>
          <td style="vertical-align: top;">Calculates vx % vy and puts
            the
            result into vx<sup>1</sup>. </td>
          <td style="vertical-align: top;">CF20 - rem-double/2addr v0,
            v2<br>
            &nbsp;Calculates&nbsp; v0,v1 %&nbsp; v2,v3 and
            puts the value into v0,v1. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">D0<br>
          </td>
          <td style="vertical-align: top;">add-int/lit16 vx,vy,lit16<br>
          </td>
          <td style="vertical-align: top;">Adds vy to lit16 and stores
            the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">D001 D204 - add-int/lit16 v1,
            v0, #int 1234 // #04d2<br>
            Adds v0 to literal 1234 and stores the result into v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">D1<br>
          </td>
          <td style="vertical-align: top;">sub-int/lit16 vx,vy,lit16<br>
          </td>
          <td style="vertical-align: top;">Calculates vy - lit16 and
            stores
            the result into vx.<br>
          </td>
          <td style="vertical-align: top;">D101 D204 - sub-int/lit16 v1,
            v0, #int 1234 // #04d2<br>
            Calculates v0 - literal 1234 and stores the result into v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">D2<br>
          </td>
          <td style="vertical-align: top;">mul-int/lit16 vx,vy,lit16<br>
          </td>
          <td style="vertical-align: top;">Calculates vy * lit16 and
            stores
            the result into vx. </td>
          <td style="vertical-align: top;">D201 D204 - mul-int/lit16 v1,
            v0, #int 1234 // #04d2<br>
            Calculates v0 * literal 1234 and stores the result into v1.
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">D3<br>
          </td>
          <td style="vertical-align: top;">div-int/lit16 vx,vy,lit16<br>
          </td>
          <td style="vertical-align: top;">Calculates vy / lit16 and
            stores
            the result into vx. </td>
          <td style="vertical-align: top;">D301 D204 - div-int/lit16 v1,
            v0, #int 1234 // #04d2<br>
            Calculates v0 / literal 1234 and stores the result into v1.
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">D4<br>
          </td>
          <td style="vertical-align: top;">rem-int/lit16 vx,vy,lit16<br>
          </td>
          <td style="vertical-align: top;">Calculates vy % lit16 and
            stores
            the result into vx. </td>
          <td style="vertical-align: top;">D401 D204 - rem-int/lit16 v1,
            v0, #int 1234 // #04d2<br>
            Calculates v0 % literal 1234 and stores the result into v1.
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">D5<br>
          </td>
          <td style="vertical-align: top;">and-int/lit16 vx,vy,lit16<br>
          </td>
          <td style="vertical-align: top;">Calculates vy AND lit16 and
            stores the result into vx. </td>
          <td style="vertical-align: top;">D501 D204 - and-int/lit16 v1,
            v0, #int 1234 // #04d2<br>
            Calculates v0 AND literal 1234 and stores the result into
            v1. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">D6<br>
          </td>
          <td style="vertical-align: top;">or-int/lit16 vx,vy,lit16<br>
          </td>
          <td style="vertical-align: top;">Calculates vy OR lit16 and
            stores the result into vx. </td>
          <td style="vertical-align: top;">D601 D204 - or-int/lit16 v1,
            v0, #int 1234 // #04d2<br>
            Calculates v0 OR literal 1234 and stores the result into v1.
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">D7<br>
          </td>
          <td style="vertical-align: top;">xor-int/lit16 vx,vy,lit16<br>
          </td>
          <td style="vertical-align: top;">Calculates vy XOR lit16 and
            stores the result into vx. </td>
          <td style="vertical-align: top;">D701 D204 - xor-int/lit16 v1,
            v0, #int 1234 // #04d2<br>
            Calculates v0 XOR literal 1234 and stores the result into
            v1. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">D8<br>
          </td>
          <td style="vertical-align: top;">add-int/lit8 vx,vy,lit8<br>
          </td>
          <td style="vertical-align: top;">Adds vy to lit8 and stores
            the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">D800 0201 - add-int/lit8
            v0,v2,
            #int1<br>
            Adds literal 1 to v2 and stores the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">D9<br>
          </td>
          <td style="vertical-align: top;">sub-int/lit8 vx,vy,lit8<br>
          </td>
          <td style="vertical-align: top;">Calculates vy-lit8 and stores
            the
            result into vx. </td>
          <td style="vertical-align: top;">D900 0201 - sub-int/lit8
            v0,v2,
            #int1<br>
            Calculates v2-1 and stores the result into v0. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">DA<br>
          </td>
          <td style="vertical-align: top;">mul-int/lit8 vx,vy,lit8<br>
          </td>
          <td style="vertical-align: top;">Multiplies vy with lit8 8-bit
            literal constant and puts the result into vx.<br>
          </td>
          <td style="vertical-align: top;">DA00 0002 - mul-int/lit8
            v0,v0,
            #int2<br>
            Multiplies v0 with literal 2 and puts the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">DB<br>
          </td>
          <td style="vertical-align: top;">div-int/lit8 vx,vy,lit8<br>
          </td>
          <td style="vertical-align: top;">Calculates vy/lit8 and stores
            the
            result into vx. </td>
          <td style="vertical-align: top;">DB00 0203 - mul-int/lit8
            v0,v2,
            #int3<br>
            Calculates v2/3 and stores the result into v0. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">DC<br>
          </td>
          <td style="vertical-align: top;">rem-int/lit8 vx,vy,lit8<br>
          </td>
          <td style="vertical-align: top;">Calculates vy % lit8 and
            stores
            the
            result into vx. </td>
          <td style="vertical-align: top;">DC00 0203 - rem-int/lit8
            v0,v2,
            #int3<br>
            Calculates v2 % 3 and stores the result into v0. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">DD<br>
          </td>
          <td style="vertical-align: top;">and-int/lit8 vx,vy,lit8<br>
          </td>
          <td style="vertical-align: top;">Calculates vy AND lit8 and
            stores the
            result into vx. </td>
          <td style="vertical-align: top;">DD00 0203 - and-int/lit8
            v0,v2,
            #int3<br>
            Calculates v2 AND 3 and stores the result into v0. </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">DE<br>
          </td>
          <td style="vertical-align: top;">or-int/lit8 vx, vy, lit8<br>
          </td>
          <td style="vertical-align: top;">Calculates vy OR lit8 and
            puts
            the result into vx.<br>
          </td>
          <td style="vertical-align: top;">DE00 0203 - or-int/lit8 v0,
            v2,
            #int 3<br>
            Calculates v2 OR literal 3 and puts the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">DF<br>
          </td>
          <td style="vertical-align: top;">xor-int/lit8 vx, vy, lit8<br>
          </td>
          <td style="vertical-align: top;">Calculates vy XOR lit8 and
            puts
            the result into vx.</td>
          <td style="vertical-align: top;">DF00
            0203&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp; 0008: xor-int/lit8 v0,
            v2, #int 3<br>
            Calculates v2 XOR literal 3 and puts the result into v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">E0<br>
          </td>
          <td style="vertical-align: top;">shl-int/lit8 vx, vy, lit8<br>
          </td>
          <td style="vertical-align: top;">Shift v0 left by the bit
            positions specified by the literal constant and put the
            result into vx.</td>
          <td style="vertical-align: top;">E001 0001 - shl-int/lit8 v1,
            v0,
            #int 1<br>
            Shift v0 left by 1 position and put the result into v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">E1<br>
          </td>
          <td style="vertical-align: top;">shr-int/lit8 vx, vy, lit8<br>
          </td>
          <td style="vertical-align: top;">Shift v0 right by the bit
            positions specified by the literal constant and put the
            result into vx.<br>
          </td>
          <td style="vertical-align: top;">E101 0001 - shr-int/lit8 v1,
            v0,
            #int 1<br>
            Shift v0 right by 1 position and put the result into v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">E2<br>
          </td>
          <td style="vertical-align: top;">ushr-int/lit8 vx, vy, lit8<br>
          </td>
          <td style="vertical-align: top;">Unsigned right shift of v0
            (&gt;&gt;&gt;) by the bit positions specified by the literal
            constant
            and put the result into vx.</td>
          <td style="vertical-align: top;">E201 0001 - ushr-int/lit8 v1,
            v0, #int 1<br>
            Unsigned shift v0 right by 1 position and put the result
            into v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">E3<br>
          </td>
          <td style="vertical-align: top;">unused_E3<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">E4<br>
          </td>
          <td style="vertical-align: top;">unused_E4<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">E5<br>
          </td>
          <td style="vertical-align: top;">unused_E5<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">E6<br>
          </td>
          <td style="vertical-align: top;">unused_E6<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">E7<br>
          </td>
          <td style="vertical-align: top;">unused_E7<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">E8<br>
          </td>
          <td style="vertical-align: top;">unused_E8<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">E9<br>
          </td>
          <td style="vertical-align: top;">unused_E9<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">EA<br>
          </td>
          <td style="vertical-align: top;">unused_EA<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">EB<br>
          </td>
          <td style="vertical-align: top;">unused_EB<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">EC<br>
          </td>
          <td style="vertical-align: top;">unused_EC<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">ED<br>
          </td>
          <td style="vertical-align: top;">unused_ED<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">EE<br>
          </td>
          <td style="vertical-align: top;">execute-inline
            {parameters},inline ID<br>
          </td>
          <td style="vertical-align: top;">Executes the inline method
            identified by inline ID<sup>6</sup>.<br>
          </td>
          <td style="vertical-align: top;">EE20 0300 0100 -
            execute-inline
            {v1, v0}, inline #0003<br>
            Executes inline method #3 using v1 as "this" and passing one
            parameter
            in v0.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">EF<br>
          </td>
          <td style="vertical-align: top;">unused_EF<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">F0<br>
          </td>
          <td style="vertical-align: top;">invoke-direct-empty<br>
          </td>
          <td style="vertical-align: top;">Stands as a placeholder for
            pruned empty methods like Object.&lt;init&gt;. This acts as
            nop during
            normal execution<sup>6</sup>.<br>
          </td>
          <td style="vertical-align: top;">F010 F608 0000 -
            invoke-direct-empty {v0},
            Ljava/lang/Object;.&lt;init&gt;:()V //
            method@08f6<br>
            Replacement for the empty method
            java/lang/Object;&lt;init&gt;.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">F1<br>
          </td>
          <td style="vertical-align: top;">unused_F1<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">F2<br>
          </td>
          <td style="vertical-align: top;">iget-quick vx,vy,offset<br>
          </td>
          <td style="vertical-align: top;">Gets the value stored at
            offset
            in vy instance's data area to vx<sup>6</sup>. </td>
          <td style="vertical-align: top;">F221 1000 - iget-quick v1,
            v2,
            [obj+0010]<br>
            Gets the value at offset 0CH of the instance pointed by v2
            and stores
            the object reference in v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">F3<br>
          </td>
          <td style="vertical-align: top;">iget-wide-quick vx,vy,offset<br>
          </td>
          <td style="vertical-align: top;">Gets the object reference
            value
            stored at offset in vy instance's data area to vx,vx+1<sup>6</sup>.
          </td>
          <td style="vertical-align: top;">F364 3001 - iget-wide-quick
            v4,
            v6, [obj+0130]<br>
            Gets the value at offset 130H of the instance pointed by v6
            and stores
            the object reference in v4,v5.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">F4<br>
          </td>
          <td style="vertical-align: top;">iget-object-quick
            vx,vy,offset<br>
          </td>
          <td style="vertical-align: top;">Gets the object reference
            value
            stored at offset in vy instance's data area to vx<sup>6</sup>.<br>
          </td>
          <td style="vertical-align: top;">F431 0C00 - iget-object-quick
            v1, v3, [obj+000c]<br>
            Gets the object reference value at offset 0CH of the
            instance pointed
            by v3 and stores the object reference in v1.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">F5<br>
          </td>
          <td style="vertical-align: top;">iput-quick vx,vy,offset<br>
          </td>
          <td style="vertical-align: top;">Puts the value stored in vx
            to
            offset in vy instance's data area<sup>6</sup>. </td>
          <td style="vertical-align: top;">F521 1000&nbsp; - iput-quick
            v1,
            v2, [obj+0010]<br>
            Puts the object reference value in v1 to offset 10H of the
            instance
            pointed by v2.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">F6<br>
          </td>
          <td style="vertical-align: top;">iput-wide-quick vx,vy,offset<br>
          </td>
          <td style="vertical-align: top;">Puts the value stored in
            vx,vx+1
            to offset in vy instance's data area<sup>6</sup>. </td>
          <td style="vertical-align: top;">F652 7001 - iput-wide-quick
            v2,
            v5, [obj+0170]<br>
            Puts the value in v2,v3 to offset 170H of the instance
            pointed by v5.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">F7<br>
          </td>
          <td style="vertical-align: top;">iput-object-quick
            vx,vy,offset<br>
          </td>
          <td style="vertical-align: top;">Puts the object reference
            value
            stored in vx to offset in vy instance's data area to vx<sup>6</sup>.
          </td>
          <td style="vertical-align: top;">F701 4C00 - iput-object-quick
            v1, v0, [obj+004c]<br>
            Puts the object reference value in v1 to offset 0CH of the
            instance
            pointed by v3.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">F8<br>
          </td>
          <td style="vertical-align: top;">invoke-virtual-quick
            {parameters},vtable offset<br>
          </td>
          <td style="vertical-align: top;">Invokes a virtual method
            using
            the vtable of the target object<sup>6</sup>.<br>
          </td>
          <td style="vertical-align: top;">F820 B800 CF00 -
            invoke-virtual-quick {v15, v12}, vtable #00b8<br>
            Invokes a virtual method. The target object instance is
            pointed by v15
            and vtable entry #B8 points to the method to be called. v12
            is a
            parameter to the method call.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">F9<br>
          </td>
          <td style="vertical-align: top;">invoke-virtual-quick/range
            {parameter range},vtable offset<br>
          </td>
          <td style="vertical-align: top;">Invokes a virtual method
            using
            the vtable of the target object<sup>6</sup> </td>
          <td style="vertical-align: top;">F906 1800 0000 -
            invoke-virtual-quick/range {v0..v5},vtable #0018<br>
            Invokes a method using the vtable of the
            instance pointed by v0. v1..v5 registers are parameters to
            the method
            call.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">FA<br>
          </td>
          <td style="vertical-align: top;">invoke-super-quick
            {parameters},vtable offset<br>
          </td>
          <td style="vertical-align: top;">Invokes a virtual method in
            the
            target object's immediate parent class using the vtable of
            that parent
            class<sup>6</sup>. </td>
          <td style="vertical-align: top;">FA40 8100 3254&nbsp; -
            invoke-super-quick {v2, v3, v4, v5}, vtable #0081<br>
            Invokes a method using the vtable of the immediate parent
            class of
            instance pointed by v2. v3, v4 and v5 registers are
            parameters to the
            method
            call.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">FB<br>
          </td>
          <td style="vertical-align: top;">invoke-super-quick/range
            {register range},vtable offset<br>
          </td>
          <td style="vertical-align: top;">Invokes a virtual method in
            the
            target object's immediate parent class using the vtable of
            that parent
            class<sup>6</sup>.<br>
          </td>
          <td style="vertical-align: top;">F906 1B00 0000 -
            invoke-super-quick/range {v0..v5}, vtable #001b<br>
            Invokes a method using the vtable of the immediate parent
            class of
            instance pointed by v0. v1..v5 registers are parameters to
            the method
            call.<br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">FC<br>
          </td>
          <td style="vertical-align: top;">unused_FC<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">FD<br>
          </td>
          <td style="vertical-align: top;">unused_FD<br>
          </td>
          <td style="vertical-align: top; text-align: left;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">FE<br>
          </td>
          <td style="vertical-align: top;">unused_FE<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
        <tr>
          <td style="vertical-align: top;">FF<br>
          </td>
          <td style="vertical-align: top;">unused_FF<br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
          <td style="vertical-align: top;"><br>
          </td>
        </tr>
      </tbody>
    </table>